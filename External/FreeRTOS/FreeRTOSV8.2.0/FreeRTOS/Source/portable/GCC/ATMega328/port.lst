   1               		.file	"port.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.text
   8               	.Ltext0:
   9               		.cfi_sections	.debug_frame
  10               	.global	pxPortInitialiseStack
  12               	pxPortInitialiseStack:
  13               	.LFB4:
  14               		.file 1 "External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c"
   1:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** /*
   2:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c ****     FreeRTOS V8.2.0 - Copyright (C) 2015 Real Time Engineers Ltd.
   3:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c ****     All rights reserved
   4:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 
   5:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c ****     VISIT http://www.FreeRTOS.org TO ENSURE YOU ARE USING THE LATEST VERSION.
   6:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 
   7:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c ****     This file is part of the FreeRTOS distribution.
   8:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 
   9:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c ****     FreeRTOS is free software; you can redistribute it and/or modify it under
  10:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c ****     the terms of the GNU General Public License (version 2) as published by the
  11:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c ****     Free Software Foundation >>!AND MODIFIED BY!<< the FreeRTOS exception.
  12:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 
  13:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 	***************************************************************************
  14:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c ****     >>!   NOTE: The modification to the GPL is included to allow you to     !<<
  15:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c ****     >>!   distribute a combined work that includes FreeRTOS without being   !<<
  16:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c ****     >>!   obliged to provide the source code for proprietary components     !<<
  17:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c ****     >>!   outside of the FreeRTOS kernel.                                   !<<
  18:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 	***************************************************************************
  19:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 
  20:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c ****     FreeRTOS is distributed in the hope that it will be useful, but WITHOUT ANY
  21:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c ****     WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
  22:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c ****     FOR A PARTICULAR PURPOSE.  Full license text is available on the following
  23:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c ****     link: http://www.freertos.org/a00114.html
  24:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 
  25:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c ****     ***************************************************************************
  26:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c ****      *                                                                       *
  27:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c ****      *    FreeRTOS provides completely free yet professionally developed,    *
  28:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c ****      *    robust, strictly quality controlled, supported, and cross          *
  29:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c ****      *    platform software that is more than just the market leader, it     *
  30:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c ****      *    is the industry's de facto standard.                               *
  31:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c ****      *                                                                       *
  32:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c ****      *    Help yourself get started quickly while simultaneously helping     *
  33:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c ****      *    to support the FreeRTOS project by purchasing a FreeRTOS           *
  34:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c ****      *    tutorial book, reference manual, or both:                          *
  35:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c ****      *    http://www.FreeRTOS.org/Documentation                              *
  36:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c ****      *                                                                       *
  37:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c ****     ***************************************************************************
  38:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 
  39:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c ****     http://www.FreeRTOS.org/FAQHelp.html - Having a problem?  Start by reading
  40:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 	the FAQ page "My application does not run, what could be wrong?".  Have you
  41:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 	defined configASSERT()?
  42:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 
  43:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 	http://www.FreeRTOS.org/support - In return for receiving this top quality
  44:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 	embedded software for free we request you assist our global community by
  45:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 	participating in the support forum.
  46:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 
  47:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 	http://www.FreeRTOS.org/training - Investing in training allows your team to
  48:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 	be as productive as possible as early as possible.  Now you can receive
  49:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 	FreeRTOS training directly from Richard Barry, CEO of Real Time Engineers
  50:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 	Ltd, and the world's leading authority on the world's leading RTOS.
  51:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 
  52:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c ****     http://www.FreeRTOS.org/plus - A selection of FreeRTOS ecosystem products,
  53:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c ****     including FreeRTOS+Trace - an indispensable productivity tool, a DOS
  54:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c ****     compatible FAT file system, and our tiny thread aware UDP/IP stack.
  55:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 
  56:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c ****     http://www.FreeRTOS.org/labs - Where new FreeRTOS products go to incubate.
  57:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c ****     Come and try FreeRTOS+TCP, our new open source TCP/IP stack for FreeRTOS.
  58:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 
  59:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c ****     http://www.OpenRTOS.com - Real Time Engineers ltd. license FreeRTOS to High
  60:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c ****     Integrity Systems ltd. to sell under the OpenRTOS brand.  Low cost OpenRTOS
  61:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c ****     licenses offer ticketed support, indemnification and commercial middleware.
  62:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 
  63:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c ****     http://www.SafeRTOS.com - High Integrity Systems also provide a safety
  64:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c ****     engineered and independently SIL3 certified version for use in safety and
  65:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c ****     mission critical applications that require provable dependability.
  66:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 
  67:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c ****     1 tab == 4 spaces!
  68:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** */
  69:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 
  70:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** /* 
  71:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 
  72:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** Changes from V2.6.0
  73:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 
  74:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 	+ AVR port - Replaced the inb() and outb() functions with direct memory
  75:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 	  access.  This allows the port to be built with the 20050414 build of
  76:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 	  WinAVR.
  77:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** */
  78:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 
  79:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** #include <stdlib.h>
  80:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** #include <avr/interrupt.h>
  81:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 
  82:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** #include "FreeRTOS.h"
  83:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** #include "task.h"
  84:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 
  85:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** /*-----------------------------------------------------------
  86:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c ****  * Implementation of functions defined in portable.h for the AVR port.
  87:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c ****  *----------------------------------------------------------*/
  88:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 
  89:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** /* Start tasks with interrupts enables. */
  90:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** #define portFLAGS_INT_ENABLED					( ( StackType_t ) 0x80 )
  91:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 
  92:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** /* Hardware constants for timer 1. */
  93:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 	#warning "Timer1 used for scheduler."
  94:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 	#define	TIMER_COMPA_ISR							TIMER1_COMPA_vect
  95:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 	#define portCLEAR_COUNTER_ON_MATCH			    ( ( uint8_t ) (1<<WGM12) )
  96:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 	#define portPRESCALE_64				            ( ( uint8_t ) ((1<<CS11)|(1<<CS10)) )
  97:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 	#define portCLOCK_PRESCALER				        ( ( uint32_t ) 64 )
  98:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 	#define portCOMPARE_MATCH_A_INTERRUPT_ENABLE	( ( uint8_t ) (1<<OCIE1A) )
  99:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 	#define portOCRL                              	OCR1AL
 100:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 	#define portOCRH                                OCR1AH
 101:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 	#define portTCCRa                               TCCR1A
 102:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 	#define portTCCRb                              	TCCR1B
 103:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 	#define portTIMSK                               TIMSK1
 104:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 	#define portTIFR																TIFR1
 105:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 
 106:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** /*-----------------------------------------------------------*/
 107:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 
 108:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** /* We require the address of the pxCurrentTCB variable, but don't want to know
 109:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** any details of its type. */
 110:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** typedef void TCB_t;
 111:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** extern volatile TCB_t * volatile pxCurrentTCB;
 112:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 
 113:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** /*-----------------------------------------------------------*/
 114:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 
 115:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** /* 
 116:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c ****  * Macro to save all the general purpose registers, the save the stack pointer
 117:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c ****  * into the TCB.  
 118:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c ****  * 
 119:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c ****  * The first thing we do is save the flags then disable interrupts.  This is to 
 120:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c ****  * guard our stack against having a context switch interrupt after we have already 
 121:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c ****  * pushed the registers onto the stack - causing the 32 registers to be on the 
 122:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c ****  * stack twice. 
 123:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c ****  * 
 124:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c ****  * r1 is set to zero as the compiler expects it to be thus, however some
 125:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c ****  * of the math routines make use of R1. 
 126:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c ****  * 
 127:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c ****  * The interrupts will have been disabled during the call to portSAVE_CONTEXT()
 128:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c ****  * so we need not worry about reading/writing to the stack pointer. 
 129:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c ****  */
 130:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 
 131:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** #define portSAVE_CONTEXT()									\
 132:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 	asm volatile (	"push	r0						\n\t"	\
 133:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 					"in		r0, __SREG__			\n\t"	\
 134:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 					"cli							\n\t"	\
 135:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 					"push	r0						\n\t"	\
 136:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 					"push	r1						\n\t"	\
 137:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 					"clr	r1						\n\t"	\
 138:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 					"push	r2						\n\t"	\
 139:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 					"push	r3						\n\t"	\
 140:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 					"push	r4						\n\t"	\
 141:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 					"push	r5						\n\t"	\
 142:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 					"push	r6						\n\t"	\
 143:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 					"push	r7						\n\t"	\
 144:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 					"push	r8						\n\t"	\
 145:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 					"push	r9						\n\t"	\
 146:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 					"push	r10						\n\t"	\
 147:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 					"push	r11						\n\t"	\
 148:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 					"push	r12						\n\t"	\
 149:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 					"push	r13						\n\t"	\
 150:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 					"push	r14						\n\t"	\
 151:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 					"push	r15						\n\t"	\
 152:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 					"push	r16						\n\t"	\
 153:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 					"push	r17						\n\t"	\
 154:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 					"push	r18						\n\t"	\
 155:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 					"push	r19						\n\t"	\
 156:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 					"push	r20						\n\t"	\
 157:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 					"push	r21						\n\t"	\
 158:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 					"push	r22						\n\t"	\
 159:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 					"push	r23						\n\t"	\
 160:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 					"push	r24						\n\t"	\
 161:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 					"push	r25						\n\t"	\
 162:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 					"push	r26						\n\t"	\
 163:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 					"push	r27						\n\t"	\
 164:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 					"push	r28						\n\t"	\
 165:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 					"push	r29						\n\t"	\
 166:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 					"push	r30						\n\t"	\
 167:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 					"push	r31						\n\t"	\
 168:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 					"lds	r26, pxCurrentTCB		\n\t"	\
 169:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 					"lds	r27, pxCurrentTCB + 1	\n\t"	\
 170:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 					"in		r0, 0x3d				\n\t"	\
 171:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 					"st		x+, r0					\n\t"	\
 172:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 					"in		r0, 0x3e				\n\t"	\
 173:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 					"st		x+, r0					\n\t"	\
 174:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 				);
 175:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 
 176:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** /* 
 177:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c ****  * Opposite to portSAVE_CONTEXT().  Interrupts will have been disabled during
 178:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c ****  * the context save so we can write to the stack pointer. 
 179:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c ****  */
 180:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 
 181:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** #define portRESTORE_CONTEXT()								\
 182:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 	asm volatile (	"lds	r26, pxCurrentTCB		\n\t"	\
 183:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 					"lds	r27, pxCurrentTCB + 1	\n\t"	\
 184:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 					"ld		r28, x+					\n\t"	\
 185:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 					"out	__SP_L__, r28			\n\t"	\
 186:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 					"ld		r29, x+					\n\t"	\
 187:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 					"out	__SP_H__, r29			\n\t"	\
 188:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 					"pop	r31						\n\t"	\
 189:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 					"pop	r30						\n\t"	\
 190:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 					"pop	r29						\n\t"	\
 191:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 					"pop	r28						\n\t"	\
 192:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 					"pop	r27						\n\t"	\
 193:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 					"pop	r26						\n\t"	\
 194:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 					"pop	r25						\n\t"	\
 195:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 					"pop	r24						\n\t"	\
 196:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 					"pop	r23						\n\t"	\
 197:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 					"pop	r22						\n\t"	\
 198:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 					"pop	r21						\n\t"	\
 199:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 					"pop	r20						\n\t"	\
 200:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 					"pop	r19						\n\t"	\
 201:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 					"pop	r18						\n\t"	\
 202:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 					"pop	r17						\n\t"	\
 203:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 					"pop	r16						\n\t"	\
 204:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 					"pop	r15						\n\t"	\
 205:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 					"pop	r14						\n\t"	\
 206:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 					"pop	r13						\n\t"	\
 207:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 					"pop	r12						\n\t"	\
 208:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 					"pop	r11						\n\t"	\
 209:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 					"pop	r10						\n\t"	\
 210:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 					"pop	r9						\n\t"	\
 211:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 					"pop	r8						\n\t"	\
 212:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 					"pop	r7						\n\t"	\
 213:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 					"pop	r6						\n\t"	\
 214:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 					"pop	r5						\n\t"	\
 215:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 					"pop	r4						\n\t"	\
 216:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 					"pop	r3						\n\t"	\
 217:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 					"pop	r2						\n\t"	\
 218:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 					"pop	r1						\n\t"	\
 219:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 					"pop	r0						\n\t"	\
 220:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 					"out	__SREG__, r0			\n\t"	\
 221:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 					"pop	r0						\n\t"	\
 222:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 				);
 223:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 
 224:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** /*-----------------------------------------------------------*/
 225:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 
 226:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** /*
 227:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c ****  * Perform hardware setup to enable ticks from timer 1, compare match A.
 228:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c ****  */
 229:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** static void prvSetupTimerInterrupt( void );
 230:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** /*-----------------------------------------------------------*/
 231:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 
 232:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** /* 
 233:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c ****  * See header file for description. 
 234:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c ****  */
 235:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** StackType_t *pxPortInitialiseStack( StackType_t *pxTopOfStack, TaskFunction_t pxCode, void *pvParam
 236:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** {
  15               		.loc 1 236 0
  16               		.cfi_startproc
  17               	.LVL0:
  18               	/* prologue: function */
  19               	/* frame size = 0 */
  20               	/* stack size = 0 */
  21               	.L__stack_usage = 0
 237:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** uint16_t usAddress;
 238:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 
 239:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 	/* Place a few bytes of known values on the bottom of the stack. 
 240:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 	This is just useful for debugging. */
 241:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 
 242:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 	*pxTopOfStack = 0x11;
  22               		.loc 1 242 0
  23 0000 31E1      		ldi r19,lo8(17)
  24 0002 FC01      		movw r30,r24
  25 0004 3083      		st Z,r19
  26               	.LVL1:
 243:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 	pxTopOfStack--;
 244:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 	*pxTopOfStack = 0x22;
  27               		.loc 1 244 0
  28 0006 3197      		sbiw r30,1
  29               	.LVL2:
  30 0008 22E2      		ldi r18,lo8(34)
  31 000a 2083      		st Z,r18
  32               	.LVL3:
 245:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 	pxTopOfStack--;
 246:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 	*pxTopOfStack = 0x33;
  33               		.loc 1 246 0
  34 000c 3197      		sbiw r30,1
  35 000e A3E3      		ldi r26,lo8(51)
  36 0010 A083      		st Z,r26
  37               	.LVL4:
 247:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 	pxTopOfStack--;
 248:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 
 249:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 	/* Simulate how the stack would look after a call to vPortYield() generated by 
 250:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 	the compiler. */
 251:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 
 252:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 	/*lint -e950 -e611 -e923 Lint doesn't like this much - but nothing I can do about it. */
 253:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 
 254:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 	/* The start of the task code will be popped off the stack last, so place
 255:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 	it on first. */
 256:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 	usAddress = ( uint16_t ) pxCode;
 257:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 	*pxTopOfStack = ( StackType_t ) ( usAddress & ( uint16_t ) 0x00ff );
  38               		.loc 1 257 0
  39 0012 3197      		sbiw r30,1
  40 0014 6083      		st Z,r22
  41               	.LVL5:
 258:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 	pxTopOfStack--;
 259:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 
 260:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 	usAddress >>= 8;
 261:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 	*pxTopOfStack = ( StackType_t ) ( usAddress & ( uint16_t ) 0x00ff );
  42               		.loc 1 261 0
  43 0016 3197      		sbiw r30,1
  44 0018 7083      		st Z,r23
  45               	.LVL6:
 262:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 	pxTopOfStack--;
 263:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 
 264:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 	/* Next simulate the stack as if after a call to portSAVE_CONTEXT().  
 265:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 	portSAVE_CONTEXT places the flags on the stack immediately after r0
 266:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 	to ensure the interrupts get disabled as soon as possible, and so ensuring
 267:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 	the stack use is minimal should a context switch interrupt occur. */
 268:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 	*pxTopOfStack = ( StackType_t ) 0x00;	/* R0 */
  46               		.loc 1 268 0
  47 001a 3197      		sbiw r30,1
  48 001c 1082      		st Z,__zero_reg__
  49               	.LVL7:
 269:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 	pxTopOfStack--;
 270:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 	*pxTopOfStack = portFLAGS_INT_ENABLED;
  50               		.loc 1 270 0
  51 001e 3197      		sbiw r30,1
  52 0020 60E8      		ldi r22,lo8(-128)
  53               	.LVL8:
  54 0022 6083      		st Z,r22
  55               	.LVL9:
 271:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 	pxTopOfStack--;
 272:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 
 273:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 
 274:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 	/* Now the remaining registers.   The compiler expects R1 to be 0. */
 275:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 	*pxTopOfStack = ( StackType_t ) 0x00;	/* R1 */
  56               		.loc 1 275 0
  57 0024 3197      		sbiw r30,1
  58               	.LVL10:
  59 0026 1082      		st Z,__zero_reg__
  60               	.LVL11:
 276:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 	pxTopOfStack--;
 277:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 	*pxTopOfStack = ( StackType_t ) 0x02;	/* R2 */
  61               		.loc 1 277 0
  62 0028 3197      		sbiw r30,1
  63               	.LVL12:
  64 002a 62E0      		ldi r22,lo8(2)
  65 002c 6083      		st Z,r22
  66               	.LVL13:
 278:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 	pxTopOfStack--;
 279:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 	*pxTopOfStack = ( StackType_t ) 0x03;	/* R3 */
  67               		.loc 1 279 0
  68 002e 3197      		sbiw r30,1
  69               	.LVL14:
  70 0030 63E0      		ldi r22,lo8(3)
  71 0032 6083      		st Z,r22
  72               	.LVL15:
 280:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 	pxTopOfStack--;
 281:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 	*pxTopOfStack = ( StackType_t ) 0x04;	/* R4 */
  73               		.loc 1 281 0
  74 0034 3197      		sbiw r30,1
  75               	.LVL16:
  76 0036 64E0      		ldi r22,lo8(4)
  77 0038 6083      		st Z,r22
  78               	.LVL17:
 282:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 	pxTopOfStack--;
 283:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 	*pxTopOfStack = ( StackType_t ) 0x05;	/* R5 */
  79               		.loc 1 283 0
  80 003a 3197      		sbiw r30,1
  81               	.LVL18:
  82 003c 65E0      		ldi r22,lo8(5)
  83 003e 6083      		st Z,r22
  84               	.LVL19:
 284:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 	pxTopOfStack--;
 285:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 	*pxTopOfStack = ( StackType_t ) 0x06;	/* R6 */
  85               		.loc 1 285 0
  86 0040 3197      		sbiw r30,1
  87               	.LVL20:
  88 0042 66E0      		ldi r22,lo8(6)
  89 0044 6083      		st Z,r22
  90               	.LVL21:
 286:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 	pxTopOfStack--;
 287:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 	*pxTopOfStack = ( StackType_t ) 0x07;	/* R7 */
  91               		.loc 1 287 0
  92 0046 3197      		sbiw r30,1
  93               	.LVL22:
  94 0048 67E0      		ldi r22,lo8(7)
  95 004a 6083      		st Z,r22
  96               	.LVL23:
 288:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 	pxTopOfStack--;
 289:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 	*pxTopOfStack = ( StackType_t ) 0x08;	/* R8 */
  97               		.loc 1 289 0
  98 004c 3197      		sbiw r30,1
  99               	.LVL24:
 100 004e 68E0      		ldi r22,lo8(8)
 101 0050 6083      		st Z,r22
 102               	.LVL25:
 290:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 	pxTopOfStack--;
 291:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 	*pxTopOfStack = ( StackType_t ) 0x09;	/* R9 */
 103               		.loc 1 291 0
 104 0052 3197      		sbiw r30,1
 105               	.LVL26:
 106 0054 69E0      		ldi r22,lo8(9)
 107 0056 6083      		st Z,r22
 108               	.LVL27:
 292:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 	pxTopOfStack--;
 293:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 	*pxTopOfStack = ( StackType_t ) 0x10;	/* R10 */
 109               		.loc 1 293 0
 110 0058 3197      		sbiw r30,1
 111               	.LVL28:
 112 005a 60E1      		ldi r22,lo8(16)
 113 005c 6083      		st Z,r22
 114               	.LVL29:
 294:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 	pxTopOfStack--;
 295:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 	*pxTopOfStack = ( StackType_t ) 0x11;	/* R11 */
 115               		.loc 1 295 0
 116 005e 3197      		sbiw r30,1
 117               	.LVL30:
 118 0060 3083      		st Z,r19
 119               	.LVL31:
 296:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 	pxTopOfStack--;
 297:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 	*pxTopOfStack = ( StackType_t ) 0x12;	/* R12 */
 120               		.loc 1 297 0
 121 0062 3197      		sbiw r30,1
 122               	.LVL32:
 123 0064 32E1      		ldi r19,lo8(18)
 124 0066 3083      		st Z,r19
 125               	.LVL33:
 298:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 	pxTopOfStack--;
 299:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 	*pxTopOfStack = ( StackType_t ) 0x13;	/* R13 */
 126               		.loc 1 299 0
 127 0068 3197      		sbiw r30,1
 128               	.LVL34:
 129 006a 33E1      		ldi r19,lo8(19)
 130 006c 3083      		st Z,r19
 131               	.LVL35:
 300:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 	pxTopOfStack--;
 301:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 	*pxTopOfStack = ( StackType_t ) 0x14;	/* R14 */
 132               		.loc 1 301 0
 133 006e 3197      		sbiw r30,1
 134               	.LVL36:
 135 0070 34E1      		ldi r19,lo8(20)
 136 0072 3083      		st Z,r19
 137               	.LVL37:
 302:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 	pxTopOfStack--;
 303:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 	*pxTopOfStack = ( StackType_t ) 0x15;	/* R15 */
 138               		.loc 1 303 0
 139 0074 3197      		sbiw r30,1
 140               	.LVL38:
 141 0076 35E1      		ldi r19,lo8(21)
 142 0078 3083      		st Z,r19
 143               	.LVL39:
 304:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 	pxTopOfStack--;
 305:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 	*pxTopOfStack = ( StackType_t ) 0x16;	/* R16 */
 144               		.loc 1 305 0
 145 007a 3197      		sbiw r30,1
 146               	.LVL40:
 147 007c 36E1      		ldi r19,lo8(22)
 148 007e 3083      		st Z,r19
 149               	.LVL41:
 306:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 	pxTopOfStack--;
 307:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 	*pxTopOfStack = ( StackType_t ) 0x17;	/* R17 */
 150               		.loc 1 307 0
 151 0080 3197      		sbiw r30,1
 152               	.LVL42:
 153 0082 37E1      		ldi r19,lo8(23)
 154 0084 3083      		st Z,r19
 155               	.LVL43:
 308:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 	pxTopOfStack--;
 309:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 	*pxTopOfStack = ( StackType_t ) 0x18;	/* R18 */
 156               		.loc 1 309 0
 157 0086 3197      		sbiw r30,1
 158               	.LVL44:
 159 0088 38E1      		ldi r19,lo8(24)
 160 008a 3083      		st Z,r19
 161               	.LVL45:
 310:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 	pxTopOfStack--;
 311:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 	*pxTopOfStack = ( StackType_t ) 0x19;	/* R19 */
 162               		.loc 1 311 0
 163 008c 3197      		sbiw r30,1
 164               	.LVL46:
 165 008e 39E1      		ldi r19,lo8(25)
 166 0090 3083      		st Z,r19
 167               	.LVL47:
 312:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 	pxTopOfStack--;
 313:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 	*pxTopOfStack = ( StackType_t ) 0x20;	/* R20 */
 168               		.loc 1 313 0
 169 0092 3197      		sbiw r30,1
 170               	.LVL48:
 171 0094 30E2      		ldi r19,lo8(32)
 172 0096 3083      		st Z,r19
 173               	.LVL49:
 314:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 	pxTopOfStack--;
 315:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 	*pxTopOfStack = ( StackType_t ) 0x21;	/* R21 */
 174               		.loc 1 315 0
 175 0098 3197      		sbiw r30,1
 176               	.LVL50:
 177 009a 31E2      		ldi r19,lo8(33)
 178 009c 3083      		st Z,r19
 179               	.LVL51:
 316:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 	pxTopOfStack--;
 317:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 	*pxTopOfStack = ( StackType_t ) 0x22;	/* R22 */
 180               		.loc 1 317 0
 181 009e 3197      		sbiw r30,1
 182               	.LVL52:
 183 00a0 2083      		st Z,r18
 184               	.LVL53:
 318:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 	pxTopOfStack--;
 319:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 	*pxTopOfStack = ( StackType_t ) 0x23;	/* R23 */
 185               		.loc 1 319 0
 186 00a2 3197      		sbiw r30,1
 187               	.LVL54:
 188 00a4 23E2      		ldi r18,lo8(35)
 189 00a6 2083      		st Z,r18
 190               	.LVL55:
 320:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 	pxTopOfStack--;
 321:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 
 322:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 	/* Place the parameter on the stack in the expected location. */
 323:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 	usAddress = ( uint16_t ) pvParameters;
 324:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 	*pxTopOfStack = ( StackType_t ) ( usAddress & ( uint16_t ) 0x00ff );
 191               		.loc 1 324 0
 192 00a8 3197      		sbiw r30,1
 193 00aa 4083      		st Z,r20
 194               	.LVL56:
 325:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 	pxTopOfStack--;
 326:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 
 327:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 	usAddress >>= 8;
 328:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 	*pxTopOfStack = ( StackType_t ) ( usAddress & ( uint16_t ) 0x00ff );
 195               		.loc 1 328 0
 196 00ac 3197      		sbiw r30,1
 197 00ae 5083      		st Z,r21
 198               	.LVL57:
 329:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 	pxTopOfStack--;
 330:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 
 331:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 	*pxTopOfStack = ( StackType_t ) 0x26;	/* R26 X */
 199               		.loc 1 331 0
 200 00b0 3197      		sbiw r30,1
 201 00b2 26E2      		ldi r18,lo8(38)
 202 00b4 2083      		st Z,r18
 203               	.LVL58:
 332:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 	pxTopOfStack--;
 333:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 	*pxTopOfStack = ( StackType_t ) 0x27;	/* R27 */
 204               		.loc 1 333 0
 205 00b6 3197      		sbiw r30,1
 206 00b8 27E2      		ldi r18,lo8(39)
 207 00ba 2083      		st Z,r18
 208               	.LVL59:
 334:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 	pxTopOfStack--;
 335:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 	*pxTopOfStack = ( StackType_t ) 0x28;	/* R28 Y */
 209               		.loc 1 335 0
 210 00bc 3197      		sbiw r30,1
 211 00be 28E2      		ldi r18,lo8(40)
 212 00c0 2083      		st Z,r18
 213               	.LVL60:
 336:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 	pxTopOfStack--;
 337:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 	*pxTopOfStack = ( StackType_t ) 0x29;	/* R29 */
 214               		.loc 1 337 0
 215 00c2 3197      		sbiw r30,1
 216 00c4 29E2      		ldi r18,lo8(41)
 217 00c6 2083      		st Z,r18
 218               	.LVL61:
 338:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 	pxTopOfStack--;
 339:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 	*pxTopOfStack = ( StackType_t ) 0x30;	/* R30 Z */
 219               		.loc 1 339 0
 220 00c8 3197      		sbiw r30,1
 221 00ca 20E3      		ldi r18,lo8(48)
 222 00cc 2083      		st Z,r18
 223               	.LVL62:
 340:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 	pxTopOfStack--;
 341:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 	*pxTopOfStack = ( StackType_t ) 0x031;	/* R31 */
 224               		.loc 1 341 0
 225 00ce 3197      		sbiw r30,1
 226 00d0 21E3      		ldi r18,lo8(49)
 227 00d2 2083      		st Z,r18
 228               	.LVL63:
 342:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 	pxTopOfStack--;
 343:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 
 344:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 	/*lint +e950 +e611 +e923 */
 345:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 
 346:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 	return pxTopOfStack;
 347:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** }
 229               		.loc 1 347 0
 230 00d4 8697      		sbiw r24,38
 231               	.LVL64:
 232 00d6 0895      		ret
 233               		.cfi_endproc
 234               	.LFE4:
 236               	.global	xPortStartScheduler
 238               	xPortStartScheduler:
 239               	.LFB5:
 348:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** /*-----------------------------------------------------------*/
 349:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 
 350:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** BaseType_t xPortStartScheduler( void )
 351:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** {
 240               		.loc 1 351 0
 241               		.cfi_startproc
 242               	/* prologue: function */
 243               	/* frame size = 0 */
 244               	/* stack size = 0 */
 245               	.L__stack_usage = 0
 246               	.LVL65:
 247               	.LBB4:
 248               	.LBB5:
 352:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 	/* Setup the hardware to generate the tick. */
 353:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 	prvSetupTimerInterrupt();
 354:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 
 355:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 	/* Restore the context of the first task that is going to run. */
 356:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 	portRESTORE_CONTEXT();
 357:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 
 358:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 	/* Simulate a function call end as generated by the compiler.  We will now
 359:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 	jump to the start of the task the context of which we have just restored. */
 360:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 	asm volatile ( "ret" );
 361:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 
 362:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 	/* Should not get here. */
 363:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 	return pdTRUE;
 364:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** }
 365:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** /*-----------------------------------------------------------*/
 366:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 
 367:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** void vPortEndScheduler( void )
 368:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** {
 369:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 	/* It is unlikely that the AVR port will get stopped.  If required simply
 370:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 	disable the tick interrupt here. */
 371:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** }
 372:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** /*-----------------------------------------------------------*/
 373:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 
 374:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** /*
 375:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c ****  * Manual context switch.  The first thing we do is save the registers so we
 376:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c ****  * can use a naked attribute.
 377:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c ****  */
 378:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** void vPortYield( void ) __attribute__ ( ( naked ) );
 379:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** void vPortYield( void )
 380:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** {
 381:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 	portSAVE_CONTEXT();
 382:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 	vTaskSwitchContext();
 383:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 	portRESTORE_CONTEXT();
 384:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 
 385:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 	asm volatile ( "ret" );
 386:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** }
 387:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** /*-----------------------------------------------------------*/
 388:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 
 389:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** /*
 390:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c ****  * Context switch function used by the tick.  This must be identical to 
 391:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c ****  * vPortYield() from the call to vTaskSwitchContext() onwards.  The only
 392:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c ****  * difference from vPortYield() is the tick count is incremented as the
 393:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c ****  * call comes from the tick ISR.
 394:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c ****  */
 395:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** void vPortYieldFromTick( void ) __attribute__ ( ( naked ) );
 396:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** void vPortYieldFromTick( void )
 397:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** {
 398:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 	portSAVE_CONTEXT();
 399:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 	if( xTaskIncrementTick() != pdFALSE )
 400:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 	{
 401:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 		vTaskSwitchContext();
 402:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 	}
 403:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 	portRESTORE_CONTEXT();
 404:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 
 405:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 	asm volatile ( "ret" );
 406:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** }
 407:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** /*-----------------------------------------------------------*/
 408:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 
 409:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** /*
 410:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c ****  * Setup timer 1 compare match A to generate a tick interrupt.
 411:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c ****  */
 412:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** static void prvSetupTimerInterrupt( void )
 413:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** {
 414:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** uint32_t ulCompareMatch;
 415:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** uint8_t ucHighByte, ucLowByte;
 416:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 
 417:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 	/* Using 16bit timer 1 to generate the tick.  Correct fuses must be
 418:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 	selected for the configCPU_CLOCK_HZ clock. */
 419:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 
 420:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 	ulCompareMatch = configCPU_CLOCK_HZ / configTICK_RATE_HZ;
 421:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 
 422:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 	/* We only have 16 bits so have to scale to get our required tick rate. */
 423:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 	ulCompareMatch /= portCLOCK_PRESCALER;
 424:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 
 425:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 	/* Adjust for correct value. */
 426:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 	ulCompareMatch -= ( uint32_t ) 1;
 427:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 
 428:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 	/* Setup compare match value for compare match A.  Interrupts are disabled 
 429:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 	before this is called so we need not worry here. */
 430:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 	ucLowByte = ( uint8_t ) ( ulCompareMatch & ( uint32_t ) 0xff );
 431:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 	ulCompareMatch >>= 8;
 432:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 	ucHighByte = ( uint8_t ) ( ulCompareMatch & ( uint32_t ) 0xff );
 433:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 	OCR1AH = ucHighByte;
 249               		.loc 1 433 0
 250 00d8 1092 8900 		sts 137,__zero_reg__
 434:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 	OCR1AL = ucLowByte;
 251               		.loc 1 434 0
 252 00dc 89EF      		ldi r24,lo8(-7)
 253 00de 8093 8800 		sts 136,r24
 254               	.LVL66:
 435:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 
 436:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 	/* Setup clock source and compare match behaviour. */
 437:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 	ucLowByte = portCLEAR_COUNTER_ON_MATCH | portPRESCALE_64;
 438:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 	TCCR1B = ucLowByte;
 255               		.loc 1 438 0
 256 00e2 8BE0      		ldi r24,lo8(11)
 257 00e4 8093 8100 		sts 129,r24
 439:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 
 440:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 	/* Enable the interrupt - this is okay as interrupt are currently globally
 441:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 	disabled. */
 442:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 	ucLowByte = TIMSK1;
 258               		.loc 1 442 0
 259 00e8 EFE6      		ldi r30,lo8(111)
 260 00ea F0E0      		ldi r31,0
 261 00ec 8081      		ld r24,Z
 262               	.LVL67:
 443:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 	ucLowByte |= portCOMPARE_MATCH_A_INTERRUPT_ENABLE;
 263               		.loc 1 443 0
 264 00ee 8260      		ori r24,lo8(2)
 265               	.LVL68:
 444:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 	TIMSK1 = ucLowByte;
 266               		.loc 1 444 0
 267 00f0 8083      		st Z,r24
 268               	.LBE5:
 269               	.LBE4:
 356:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 
 270               		.loc 1 356 0
 271               	/* #APP */
 272               	 ;  356 "External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c" 1
 273 00f2 A091 0000 		lds	r26, pxCurrentTCB		
 274 00f6 B091 0000 		lds	r27, pxCurrentTCB + 1	
 275 00fa CD91      		ld		r28, x+					
 276 00fc CDBF      		out	__SP_L__, r28			
 277 00fe DD91      		ld		r29, x+					
 278 0100 DEBF      		out	__SP_H__, r29			
 279 0102 FF91      		pop	r31						
 280 0104 EF91      		pop	r30						
 281 0106 DF91      		pop	r29						
 282 0108 CF91      		pop	r28						
 283 010a BF91      		pop	r27						
 284 010c AF91      		pop	r26						
 285 010e 9F91      		pop	r25						
 286 0110 8F91      		pop	r24						
 287 0112 7F91      		pop	r23						
 288 0114 6F91      		pop	r22						
 289 0116 5F91      		pop	r21						
 290 0118 4F91      		pop	r20						
 291 011a 3F91      		pop	r19						
 292 011c 2F91      		pop	r18						
 293 011e 1F91      		pop	r17						
 294 0120 0F91      		pop	r16						
 295 0122 FF90      		pop	r15						
 296 0124 EF90      		pop	r14						
 297 0126 DF90      		pop	r13						
 298 0128 CF90      		pop	r12						
 299 012a BF90      		pop	r11						
 300 012c AF90      		pop	r10						
 301 012e 9F90      		pop	r9						
 302 0130 8F90      		pop	r8						
 303 0132 7F90      		pop	r7						
 304 0134 6F90      		pop	r6						
 305 0136 5F90      		pop	r5						
 306 0138 4F90      		pop	r4						
 307 013a 3F90      		pop	r3						
 308 013c 2F90      		pop	r2						
 309 013e 1F90      		pop	r1						
 310 0140 0F90      		pop	r0						
 311 0142 0FBE      		out	__SREG__, r0			
 312 0144 0F90      		pop	r0						
 313               		
 314               	 ;  0 "" 2
 360:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 
 315               		.loc 1 360 0
 316               	 ;  360 "External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c" 1
 317 0146 0895      		ret
 318               	 ;  0 "" 2
 364:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** /*-----------------------------------------------------------*/
 319               		.loc 1 364 0
 320               	/* #NOAPP */
 321 0148 81E0      		ldi r24,lo8(1)
 322               	.LVL69:
 323 014a 0895      		ret
 324               		.cfi_endproc
 325               	.LFE5:
 327               	.global	vPortEndScheduler
 329               	vPortEndScheduler:
 330               	.LFB6:
 368:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 	/* It is unlikely that the AVR port will get stopped.  If required simply
 331               		.loc 1 368 0
 332               		.cfi_startproc
 333               	/* prologue: function */
 334               	/* frame size = 0 */
 335               	/* stack size = 0 */
 336               	.L__stack_usage = 0
 337 014c 0895      		ret
 338               		.cfi_endproc
 339               	.LFE6:
 341               	.global	vPortYield
 343               	vPortYield:
 344               	.LFB7:
 380:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 	portSAVE_CONTEXT();
 345               		.loc 1 380 0
 346               		.cfi_startproc
 347               	/* prologue: naked */
 348               	/* frame size = 0 */
 349               	/* stack size = 0 */
 350               	.L__stack_usage = 0
 381:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 	vTaskSwitchContext();
 351               		.loc 1 381 0
 352               	/* #APP */
 353               	 ;  381 "External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c" 1
 354 014e 0F92      		push	r0						
 355 0150 0FB6      		in		r0, __SREG__			
 356 0152 F894      		cli							
 357 0154 0F92      		push	r0						
 358 0156 1F92      		push	r1						
 359 0158 1124      		clr	r1						
 360 015a 2F92      		push	r2						
 361 015c 3F92      		push	r3						
 362 015e 4F92      		push	r4						
 363 0160 5F92      		push	r5						
 364 0162 6F92      		push	r6						
 365 0164 7F92      		push	r7						
 366 0166 8F92      		push	r8						
 367 0168 9F92      		push	r9						
 368 016a AF92      		push	r10						
 369 016c BF92      		push	r11						
 370 016e CF92      		push	r12						
 371 0170 DF92      		push	r13						
 372 0172 EF92      		push	r14						
 373 0174 FF92      		push	r15						
 374 0176 0F93      		push	r16						
 375 0178 1F93      		push	r17						
 376 017a 2F93      		push	r18						
 377 017c 3F93      		push	r19						
 378 017e 4F93      		push	r20						
 379 0180 5F93      		push	r21						
 380 0182 6F93      		push	r22						
 381 0184 7F93      		push	r23						
 382 0186 8F93      		push	r24						
 383 0188 9F93      		push	r25						
 384 018a AF93      		push	r26						
 385 018c BF93      		push	r27						
 386 018e CF93      		push	r28						
 387 0190 DF93      		push	r29						
 388 0192 EF93      		push	r30						
 389 0194 FF93      		push	r31						
 390 0196 A091 0000 		lds	r26, pxCurrentTCB		
 391 019a B091 0000 		lds	r27, pxCurrentTCB + 1	
 392 019e 0DB6      		in		r0, 0x3d				
 393 01a0 0D92      		st		x+, r0					
 394 01a2 0EB6      		in		r0, 0x3e				
 395 01a4 0D92      		st		x+, r0					
 396               		
 397               	 ;  0 "" 2
 382:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 	portRESTORE_CONTEXT();
 398               		.loc 1 382 0
 399               	/* #NOAPP */
 400 01a6 0E94 0000 		call vTaskSwitchContext
 401               	.LVL70:
 383:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 
 402               		.loc 1 383 0
 403               	/* #APP */
 404               	 ;  383 "External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c" 1
 405 01aa A091 0000 		lds	r26, pxCurrentTCB		
 406 01ae B091 0000 		lds	r27, pxCurrentTCB + 1	
 407 01b2 CD91      		ld		r28, x+					
 408 01b4 CDBF      		out	__SP_L__, r28			
 409 01b6 DD91      		ld		r29, x+					
 410 01b8 DEBF      		out	__SP_H__, r29			
 411 01ba FF91      		pop	r31						
 412 01bc EF91      		pop	r30						
 413 01be DF91      		pop	r29						
 414 01c0 CF91      		pop	r28						
 415 01c2 BF91      		pop	r27						
 416 01c4 AF91      		pop	r26						
 417 01c6 9F91      		pop	r25						
 418 01c8 8F91      		pop	r24						
 419 01ca 7F91      		pop	r23						
 420 01cc 6F91      		pop	r22						
 421 01ce 5F91      		pop	r21						
 422 01d0 4F91      		pop	r20						
 423 01d2 3F91      		pop	r19						
 424 01d4 2F91      		pop	r18						
 425 01d6 1F91      		pop	r17						
 426 01d8 0F91      		pop	r16						
 427 01da FF90      		pop	r15						
 428 01dc EF90      		pop	r14						
 429 01de DF90      		pop	r13						
 430 01e0 CF90      		pop	r12						
 431 01e2 BF90      		pop	r11						
 432 01e4 AF90      		pop	r10						
 433 01e6 9F90      		pop	r9						
 434 01e8 8F90      		pop	r8						
 435 01ea 7F90      		pop	r7						
 436 01ec 6F90      		pop	r6						
 437 01ee 5F90      		pop	r5						
 438 01f0 4F90      		pop	r4						
 439 01f2 3F90      		pop	r3						
 440 01f4 2F90      		pop	r2						
 441 01f6 1F90      		pop	r1						
 442 01f8 0F90      		pop	r0						
 443 01fa 0FBE      		out	__SREG__, r0			
 444 01fc 0F90      		pop	r0						
 445               		
 446               	 ;  0 "" 2
 385:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** }
 447               		.loc 1 385 0
 448               	 ;  385 "External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c" 1
 449 01fe 0895      		ret
 450               	 ;  0 "" 2
 451               	/* epilogue start */
 386:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** /*-----------------------------------------------------------*/
 452               		.loc 1 386 0
 453               	/* #NOAPP */
 454               		.cfi_endproc
 455               	.LFE7:
 457               	.global	vPortYieldFromTick
 459               	vPortYieldFromTick:
 460               	.LFB8:
 397:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 	portSAVE_CONTEXT();
 461               		.loc 1 397 0
 462               		.cfi_startproc
 463               	/* prologue: naked */
 464               	/* frame size = 0 */
 465               	/* stack size = 0 */
 466               	.L__stack_usage = 0
 398:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 	if( xTaskIncrementTick() != pdFALSE )
 467               		.loc 1 398 0
 468               	/* #APP */
 469               	 ;  398 "External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c" 1
 470 0200 0F92      		push	r0						
 471 0202 0FB6      		in		r0, __SREG__			
 472 0204 F894      		cli							
 473 0206 0F92      		push	r0						
 474 0208 1F92      		push	r1						
 475 020a 1124      		clr	r1						
 476 020c 2F92      		push	r2						
 477 020e 3F92      		push	r3						
 478 0210 4F92      		push	r4						
 479 0212 5F92      		push	r5						
 480 0214 6F92      		push	r6						
 481 0216 7F92      		push	r7						
 482 0218 8F92      		push	r8						
 483 021a 9F92      		push	r9						
 484 021c AF92      		push	r10						
 485 021e BF92      		push	r11						
 486 0220 CF92      		push	r12						
 487 0222 DF92      		push	r13						
 488 0224 EF92      		push	r14						
 489 0226 FF92      		push	r15						
 490 0228 0F93      		push	r16						
 491 022a 1F93      		push	r17						
 492 022c 2F93      		push	r18						
 493 022e 3F93      		push	r19						
 494 0230 4F93      		push	r20						
 495 0232 5F93      		push	r21						
 496 0234 6F93      		push	r22						
 497 0236 7F93      		push	r23						
 498 0238 8F93      		push	r24						
 499 023a 9F93      		push	r25						
 500 023c AF93      		push	r26						
 501 023e BF93      		push	r27						
 502 0240 CF93      		push	r28						
 503 0242 DF93      		push	r29						
 504 0244 EF93      		push	r30						
 505 0246 FF93      		push	r31						
 506 0248 A091 0000 		lds	r26, pxCurrentTCB		
 507 024c B091 0000 		lds	r27, pxCurrentTCB + 1	
 508 0250 0DB6      		in		r0, 0x3d				
 509 0252 0D92      		st		x+, r0					
 510 0254 0EB6      		in		r0, 0x3e				
 511 0256 0D92      		st		x+, r0					
 512               		
 513               	 ;  0 "" 2
 399:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 	{
 514               		.loc 1 399 0
 515               	/* #NOAPP */
 516 0258 0E94 0000 		call xTaskIncrementTick
 517               	.LVL71:
 518 025c 8111      		cpse r24,__zero_reg__
 401:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 	}
 519               		.loc 1 401 0
 520 025e 0E94 0000 		call vTaskSwitchContext
 521               	.LVL72:
 522               	.L6:
 403:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 
 523               		.loc 1 403 0
 524               	/* #APP */
 525               	 ;  403 "External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c" 1
 526 0262 A091 0000 		lds	r26, pxCurrentTCB		
 527 0266 B091 0000 		lds	r27, pxCurrentTCB + 1	
 528 026a CD91      		ld		r28, x+					
 529 026c CDBF      		out	__SP_L__, r28			
 530 026e DD91      		ld		r29, x+					
 531 0270 DEBF      		out	__SP_H__, r29			
 532 0272 FF91      		pop	r31						
 533 0274 EF91      		pop	r30						
 534 0276 DF91      		pop	r29						
 535 0278 CF91      		pop	r28						
 536 027a BF91      		pop	r27						
 537 027c AF91      		pop	r26						
 538 027e 9F91      		pop	r25						
 539 0280 8F91      		pop	r24						
 540 0282 7F91      		pop	r23						
 541 0284 6F91      		pop	r22						
 542 0286 5F91      		pop	r21						
 543 0288 4F91      		pop	r20						
 544 028a 3F91      		pop	r19						
 545 028c 2F91      		pop	r18						
 546 028e 1F91      		pop	r17						
 547 0290 0F91      		pop	r16						
 548 0292 FF90      		pop	r15						
 549 0294 EF90      		pop	r14						
 550 0296 DF90      		pop	r13						
 551 0298 CF90      		pop	r12						
 552 029a BF90      		pop	r11						
 553 029c AF90      		pop	r10						
 554 029e 9F90      		pop	r9						
 555 02a0 8F90      		pop	r8						
 556 02a2 7F90      		pop	r7						
 557 02a4 6F90      		pop	r6						
 558 02a6 5F90      		pop	r5						
 559 02a8 4F90      		pop	r4						
 560 02aa 3F90      		pop	r3						
 561 02ac 2F90      		pop	r2						
 562 02ae 1F90      		pop	r1						
 563 02b0 0F90      		pop	r0						
 564 02b2 0FBE      		out	__SREG__, r0			
 565 02b4 0F90      		pop	r0						
 566               		
 567               	 ;  0 "" 2
 405:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** }
 568               		.loc 1 405 0
 569               	 ;  405 "External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c" 1
 570 02b6 0895      		ret
 571               	 ;  0 "" 2
 572               	/* epilogue start */
 406:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** /*-----------------------------------------------------------*/
 573               		.loc 1 406 0
 574               	/* #NOAPP */
 575               		.cfi_endproc
 576               	.LFE8:
 578               	.global	__vector_11
 580               	__vector_11:
 581               	.LFB10:
 445:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** }
 446:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** /*-----------------------------------------------------------*/
 447:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 
 448:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** #if configUSE_PREEMPTION == 1
 449:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 
 450:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 	/*
 451:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 	 * Tick ISR for preemptive scheduler.  We can use a naked attribute as
 452:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 	 * the context is saved at the start of vPortYieldFromTick().  The tick
 453:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 	 * count is incremented after the context is saved.
 454:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 	 */
 455:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 	ISR(TIMER_COMPA_ISR, ISR_NAKED)
 456:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 	{
 457:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 		vPortYieldFromTick();
 458:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 		asm volatile ( "reti" );
 459:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 	}
 460:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** #else
 461:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 
 462:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 	/*
 463:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 	 * Tick ISR for the cooperative scheduler.  All this does is increment the
 464:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 	 * tick count.  We don't need to switch context, this can only be done by
 465:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 	 * manual calls to taskYIELD();
 466:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 	 */
 467:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 	void TIMER_COMPA_ISR( void ) __attribute__ ( ( signal ) );
 468:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 	ISR(TIMER_COMPA_ISR)
 469:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 	{
 582               		.loc 1 469 0
 583               		.cfi_startproc
 584 02b8 1F92      		push r1
 585               	.LCFI0:
 586               		.cfi_def_cfa_offset 3
 587               		.cfi_offset 1, -2
 588 02ba 0F92      		push r0
 589               	.LCFI1:
 590               		.cfi_def_cfa_offset 4
 591               		.cfi_offset 0, -3
 592 02bc 0FB6      		in r0,__SREG__
 593 02be 0F92      		push r0
 594 02c0 1124      		clr __zero_reg__
 595 02c2 2F93      		push r18
 596               	.LCFI2:
 597               		.cfi_def_cfa_offset 5
 598               		.cfi_offset 18, -4
 599 02c4 3F93      		push r19
 600               	.LCFI3:
 601               		.cfi_def_cfa_offset 6
 602               		.cfi_offset 19, -5
 603 02c6 4F93      		push r20
 604               	.LCFI4:
 605               		.cfi_def_cfa_offset 7
 606               		.cfi_offset 20, -6
 607 02c8 5F93      		push r21
 608               	.LCFI5:
 609               		.cfi_def_cfa_offset 8
 610               		.cfi_offset 21, -7
 611 02ca 6F93      		push r22
 612               	.LCFI6:
 613               		.cfi_def_cfa_offset 9
 614               		.cfi_offset 22, -8
 615 02cc 7F93      		push r23
 616               	.LCFI7:
 617               		.cfi_def_cfa_offset 10
 618               		.cfi_offset 23, -9
 619 02ce 8F93      		push r24
 620               	.LCFI8:
 621               		.cfi_def_cfa_offset 11
 622               		.cfi_offset 24, -10
 623 02d0 9F93      		push r25
 624               	.LCFI9:
 625               		.cfi_def_cfa_offset 12
 626               		.cfi_offset 25, -11
 627 02d2 AF93      		push r26
 628               	.LCFI10:
 629               		.cfi_def_cfa_offset 13
 630               		.cfi_offset 26, -12
 631 02d4 BF93      		push r27
 632               	.LCFI11:
 633               		.cfi_def_cfa_offset 14
 634               		.cfi_offset 27, -13
 635 02d6 EF93      		push r30
 636               	.LCFI12:
 637               		.cfi_def_cfa_offset 15
 638               		.cfi_offset 30, -14
 639 02d8 FF93      		push r31
 640               	.LCFI13:
 641               		.cfi_def_cfa_offset 16
 642               		.cfi_offset 31, -15
 643               	/* prologue: Signal */
 644               	/* frame size = 0 */
 645               	/* stack size = 15 */
 646               	.L__stack_usage = 15
 470:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 		((PORTD) ^=  (PIN7));
 647               		.loc 1 470 0
 648 02da 9BB1      		in r25,0xb
 649 02dc 87E0      		ldi r24,lo8(7)
 650 02de 8927      		eor r24,r25
 651 02e0 8BB9      		out 0xb,r24
 471:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 		xTaskIncrementTick();
 652               		.loc 1 471 0
 653 02e2 0E94 0000 		call xTaskIncrementTick
 654               	.LVL73:
 655               	/* epilogue start */
 472:External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/port.c **** 	}
 656               		.loc 1 472 0
 657 02e6 FF91      		pop r31
 658 02e8 EF91      		pop r30
 659 02ea BF91      		pop r27
 660 02ec AF91      		pop r26
 661 02ee 9F91      		pop r25
 662 02f0 8F91      		pop r24
 663 02f2 7F91      		pop r23
 664 02f4 6F91      		pop r22
 665 02f6 5F91      		pop r21
 666 02f8 4F91      		pop r20
 667 02fa 3F91      		pop r19
 668 02fc 2F91      		pop r18
 669 02fe 0F90      		pop r0
 670 0300 0FBE      		out __SREG__,r0
 671 0302 0F90      		pop r0
 672 0304 1F90      		pop r1
 673 0306 1895      		reti
 674               		.cfi_endproc
 675               	.LFE10:
 677               	.Letext0:
 678               		.file 2 "/usr/local/Cellar/avr-gcc/4.9.2/avr/include/stdint.h"
 679               		.file 3 "External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/include/projdefs.h"
 680               		.file 4 "External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/portable/GCC/ATMega328/portmacro.h"
 681               		.file 5 "External/FreeRTOS/FreeRTOSV8.2.0/FreeRTOS/Source/include/task.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 port.c
/var/folders/3x/fbs2jxzx41l_jft3039l7_gw0000gn/T//cceTLArl.s:2      *ABS*:000000000000003e __SP_H__
/var/folders/3x/fbs2jxzx41l_jft3039l7_gw0000gn/T//cceTLArl.s:3      *ABS*:000000000000003d __SP_L__
/var/folders/3x/fbs2jxzx41l_jft3039l7_gw0000gn/T//cceTLArl.s:4      *ABS*:000000000000003f __SREG__
/var/folders/3x/fbs2jxzx41l_jft3039l7_gw0000gn/T//cceTLArl.s:5      *ABS*:0000000000000000 __tmp_reg__
/var/folders/3x/fbs2jxzx41l_jft3039l7_gw0000gn/T//cceTLArl.s:6      *ABS*:0000000000000001 __zero_reg__
/var/folders/3x/fbs2jxzx41l_jft3039l7_gw0000gn/T//cceTLArl.s:12     .text:0000000000000000 pxPortInitialiseStack
/var/folders/3x/fbs2jxzx41l_jft3039l7_gw0000gn/T//cceTLArl.s:238    .text:00000000000000d8 xPortStartScheduler
/var/folders/3x/fbs2jxzx41l_jft3039l7_gw0000gn/T//cceTLArl.s:329    .text:000000000000014c vPortEndScheduler
/var/folders/3x/fbs2jxzx41l_jft3039l7_gw0000gn/T//cceTLArl.s:343    .text:000000000000014e vPortYield
/var/folders/3x/fbs2jxzx41l_jft3039l7_gw0000gn/T//cceTLArl.s:459    .text:0000000000000200 vPortYieldFromTick
/var/folders/3x/fbs2jxzx41l_jft3039l7_gw0000gn/T//cceTLArl.s:580    .text:00000000000002b8 __vector_11

UNDEFINED SYMBOLS
pxCurrentTCB
vTaskSwitchContext
xTaskIncrementTick
